# Copied from https://github.com/duckdb/duckdb (MIT licensed).
# Copyright 2018-2022 Stichting DuckDB Foundation 

statement ok
SET RW_IMPLICIT_FLUSH TO true;

# constant casts
query I
SELECT ROW(1,2)::STRUCT<i BIGINT, j VARCHAR>;
----
(1,2)

query I
SELECT (NULL, 'hello')::STRUCT<i BIGINT, j VARCHAR>;
----
(NULL,hello)

query I
SELECT (NULL, NULL)::STRUCT<i BIGINT, j VARCHAR>;
----
(NULL,NULL)

query I
SELECT NULL::STRUCT<i BIGINT, j VARCHAR>;
----
NULL

# cast and extract
query I
SELECT (NULL, NULL)::STRUCT<i BIGINT, j VARCHAR>;
----
(NULL,NULL)

query I
SELECT ((NULL, NULL)::STRUCT<i BIGINT, j VARCHAR>).i;
----
NULL

query I
SELECT (NULL::STRUCT<i BIGINT, j VARCHAR>).i;
----
NULL

# nested struct casts
query I
SELECT (1, (2, 3))::STRUCT<i BIGINT, j STRUCT<a BIGINT, b VARCHAR>>;
----
(1,(2,3))

query I
SELECT (1, (NULL, 3))::STRUCT<i BIGINT, j STRUCT<a BIGINT, b VARCHAR>>;
----
(1,(NULL,3))

query I
SELECT (1, (2, NULL))::STRUCT<i BIGINT, j STRUCT<a BIGINT, b VARCHAR>>;
----
(1,(2,NULL))

query I
SELECT (1, NULL)::STRUCT<i BIGINT, j STRUCT<a BIGINT, b VARCHAR>>;
----
(1,NULL)

# cast and extract
query I
SELECT ((1, NULL)::STRUCT<i BIGINT, j STRUCT<a BIGINT, b VARCHAR>>).j.a;
----
NULL

query I
SELECT NULL::STRUCT<i BIGINT, j STRUCT<a BIGINT, b VARCHAR>>;
----
NULL

# now the same but non-constant
statement ok
CREATE TABLE structs(s STRUCT<i INTEGER, j INTEGER>);

statement ok
INSERT INTO structs VALUES ((1,2)), ((null, 2)), ((1, null)), (NULL)

query I rowsort
SELECT s FROM structs;
----
(1,2)
NULL
(NULL,2)
(1,NULL)

statement ok
DROP TABLE structs;
