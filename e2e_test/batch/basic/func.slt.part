statement ok
SET RW_IMPLICIT_FLUSH TO true;

query I
select nullif(2,2);
----
NULL

query I
select nullif(1,2);
----
1

query I
select coalesce(1,2);
----
1

statement ok
create table t1 (v1 int, v2 int, v3 int);

statement ok
insert into t1 values (1,null,null),(null,2,null),(null,null,3);

query I
select nullif(t1.v1,1) from t1;
----
NULL
NULL
NULL

query I rowsort
select coalesce(v1,v2,v3) from t1;
----
1
2
3

statement ok
drop table t1;

statement ok
create table t (v1 int);

statement ok
create table b (b1 int, b2 int);


statement ok
insert into t values (2);

statement ok
insert into b values (2, 1);

query T
SELECT 1 in (3, 0.5*2, min(v1)) from t;
----
t

query T
SELECT 1 in (3, 0.5*2, min(v1), null) from t;
----
t

query T
SELECT null in (null, 3, 0.5*2, min(v1)) from t;
----
NULL

query T
SELECT 99 in (null, 3, 0.5*2, min(v1)) from t;
----
NULL

query I
SELECT b2 from b where 1 in (3, 1.0, (select min(v1) from t));
----
1

query I
SELECT b2 from b where exists (select 2 from t where v1 in (3, 1.0, b1));
----
1

statement ok
drop table t;

statement ok
drop table b;

query T
select concat_ws(',', 'a', 'b');
----
a,b

query T
select concat_ws(NULL, 'a', 'b');
----
NULL

query T
select concat_ws(',', NULL, 'b');
----
b

query T
select concat_ws(NULL, NULL, 'b');
----
NULL

query T
select concat_ws(',', 1, 1.01, 'A', true, NULL);
----
1,1.01,A,t

statement ok
create table t (v1 varchar, v2 smallint, v3 int, v4 decimal, v5 real, v6 double, v7 bool, v8 string);

statement ok
insert into t values (',', 1, 2, 3.01, 4, 5.01, true, NULL);

query T
select concat_ws(v1, v2, v3, v4, v5, v6, v7, v8) from t;
----
1,2,3.01,4,5.01,t


statement ok
drop table t;

query T
select md5('abcdefghijklmnopqrstuvwxyz');
----
c3fcd3d76192e4007dfb496cca67e13b

query T
select md5('hello RUST');
----
917b821a0a5f23ab0cfdb36056d2eb9d

query T
select md5('hello world');
----
5eb63bbbe01eeed093cb22bb8f5acdc3

query T
select split_part('abc~@~def~@~ghi', '~@~', 2);
----
def

query T
select split_part('abc,def,ghi,jkl', ',', -2);
----
ghi


query I
select char_length('hello world');
----
11

query I
select char_length('abcdefghijklmnopqrstuvwxyz');
----
26

query I
select length('hello world');
----
11

query I
select length('你好hhh');
----
5

query I
select octet_length('hello world');
----
11

query I
select octet_length('你好hhh');
----
9

query I
select bit_length('hello world') / octet_length('hello world');
----
8

query I
select bit_length('你好hhh') / octet_length('你好hhh');
----
8

query I
select ascii('abc');
----
97

query I
select repeat('hello', 3);
----
hellohellohello

query I
select repeat('hello', -1);
----
(empty)

query T
select substr('hello', NULL);
----
NULL

query T
select substr(NULL, 1);
----
NULL

query T
select pg_typeof('123');
----
unknown

query T
select pg_typeof(-9223372036854775808);
----
bigint

query T
select pg_typeof(round(null));
----
double precision

query T
select pg_typeof(row(true, 1, 'hello'));
----
record

query T
select pg_typeof(array[1, 2]);
----
integer[]

# Note that PostgreSQL still displays `integer[]` in this case.
query T
select pg_typeof(array[array[1, 2], array[3, 4]]);
----
integer[][]

query I
select count(current_database());
----
1

query T
select regexp_match('abc', 'bc');
----
{bc}

query T
select regexp_match('abc', 'd');
----
NULL

query T
select regexp_match('foobarbequebaz', '(bar)(beque)');
----
{bar,beque}

query T
select regexp_match('foobarbequebaz', 'bar(beque)');
----
{beque}

query T
select regexp_match('foobarbequebaz', 'bar.*que');
----
{barbeque}

query T
select regexp_match('abc01234xyz', '(?:(.*?)(\d+)(.*)){1,1}');
----
{abc,01234,xyz}

query T
select regexp_matches('foobarbequebazilbarfbonk', '(b[^b]+)(b[^b]+)', 'g');
----
 {bar,beque}
 {bazil,barf}
