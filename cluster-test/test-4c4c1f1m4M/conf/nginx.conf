# 负载均衡
upstream minio-api {
  ip_hash; #同一IPSession优先
  server ${NODE1}:9301 max_fails=2 fail_timeout=30s;
  server ${NODE2}:9301 max_fails=2 fail_timeout=30s;
  server ${NODE3}:9301 max_fails=2 fail_timeout=30s;
  server ${NODE4}:9301 max_fails=2 fail_timeout=30s;
}
# 负载均衡
upstream minio-console {
  least_conn; #最少链接优先
  server ${NODE1}:9400  max_fails=2 fail_timeout=30s;
  server ${NODE2}:9400  max_fails=2 fail_timeout=30s;
  server ${NODE3}:9400  max_fails=2 fail_timeout=30s;
  server ${NODE4}:9400  max_fails=2 fail_timeout=30s;
}
server {
  # 监听端⼝
  listen 9000;
  # 服务器域名（主机头）
  server_name u1;
  # 代理 Web 服务的 Url 前缀，⼀般是 Web 服务的虚拟⽬录（可以是正则表达式）。
  location / {
    proxy_set_header Host $http_host; # proxy_set_heade
    # proxy_set_header   Host $http_host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-Host  $host:$server_port;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto  $http_x_forwarded_proto;
    client_body_buffer_size 10M;
    client_max_body_size 10G;
    proxy_buffers 1024 4k;
    proxy_read_timeout 300;
    proxy_next_upstream error timeout http_404;
    # Default is HTTP/1, keepalive is only enabled in HTTP/1.1     proxy_http_version 1.1;     proxy_set_header Connection "";
    proxy_pass http://minio-api;
  }
}
server {
  # 监听端⼝
  listen 9001;
  # 服务器域名（主机头）
  server_name u1;
  # 代理 Web 服务的 Url 前缀，⼀般是 Web 服务的虚拟⽬录（可以是正则表达式）。
  location / {
    proxy_pass http://minio-console;
  }
}
