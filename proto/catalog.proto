syntax = "proto3";

package catalog;

import "plan_common.proto";

option optimize_for = SPEED;

message StreamSourceInfo {
  map<string, string> properties = 1;
  plan_common.RowFormatType row_format = 2;
  string row_schema_location = 3;
  int32 row_id_index = 4;
  repeated plan_common.ColumnCatalog columns = 5;
  repeated int32 pk_column_ids = 6;
}

message TableSourceInfo {
  repeated plan_common.ColumnCatalog columns = 1;
}

message Source {
  uint32 id = 1;
  uint32 schema_id = 2;
  uint32 database_id = 3;
  string name = 4;
  oneof info {
    StreamSourceInfo stream_source = 5;
    TableSourceInfo table_source = 6;
  }
}

// VirtualTable defines a view in system catalogs, it can only be queried and not be treated as a source.
message VirtualTable {
  uint32 id = 1;
  string name = 2;
  repeated plan_common.ColumnCatalog columns = 3;
}

/// See `TableCatalog` struct in frontend crate for more information.
message Table {
  uint32 id = 1;
  uint32 schema_id = 2;
  uint32 database_id = 3;
  string name = 4;
  repeated plan_common.ColumnCatalog columns = 5;
  repeated int32 order_column_ids = 6;
  repeated plan_common.OrderType orders = 7;
  repeated uint32 dependent_relations = 8;
  oneof optional_associated_source_id {
    uint32 associated_source_id = 9;
  }
  bool is_index = 10;
  uint32 index_on_id = 11;
  repeated int32 distribution_keys = 12;
  repeated int32 pk = 13;
}

message Schema {
  uint32 id = 1;
  uint32 database_id = 2;
  string name = 3;
}

message Database {
  uint32 id = 1;
  string name = 2;
}
