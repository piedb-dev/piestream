syntax = "proto3";

package ddl_service;

import "catalog.proto";
import "common.proto";
import "stream_plan.proto";

option optimize_for = SPEED;

message CreateDatabaseRequest {
  catalog.Database db = 1;
}

message CreateDatabaseResponse {
  common.Status status = 1;
  uint32 database_id = 2;
  uint64 version = 3;
}

message DropDatabaseRequest {
  uint32 database_id = 1;
}

message DropDatabaseResponse {
  common.Status status = 1;
  uint64 version = 2;
}

message CreateSchemaRequest {
  catalog.Schema schema = 1;
}

message CreateSchemaResponse {
  common.Status status = 1;
  uint32 schema_id = 2;
  uint64 version = 3;
}

message DropSchemaRequest {
  uint32 schema_id = 1;
}

message DropSchemaResponse {
  common.Status status = 1;
  uint64 version = 2;
}

message CreateSourceRequest {
  catalog.Source source = 1;
}

message CreateSourceResponse {
  common.Status status = 1;
  uint32 source_id = 2;
  uint64 version = 3;
}

message DropSourceRequest {
  uint32 source_id = 1;
}

message DropSourceResponse {
  common.Status status = 1;
  uint64 version = 2;
}

message CreateSinkRequest {
  catalog.Sink sink = 1;
  stream_plan.StreamFragmentGraph fragment_graph = 2;
}

message CreateSinkResponse {
  common.Status status = 1;
  uint32 sink_id = 2;
  uint64 version = 3;
}

message DropSinkRequest {
  uint32 sink_id = 1;
}

message DropSinkResponse {
  common.Status status = 1;
  uint64 version = 2;
}

message CreateMaterializedViewRequest {
  catalog.Table materialized_view = 1;
  stream_plan.StreamFragmentGraph fragment_graph = 2;
}

message CreateMaterializedViewResponse {
  common.Status status = 1;
  uint32 table_id = 2;
  uint64 version = 3;
}

message DropMaterializedViewRequest {
  uint32 table_id = 1;
}

message DropMaterializedViewResponse {
  common.Status status = 1;
  uint64 version = 2;
}

message CreateMaterializedSourceRequest {
  catalog.Source source = 1;
  catalog.Table materialized_view = 2;
  stream_plan.StreamFragmentGraph fragment_graph = 3;
}

message CreateMaterializedSourceResponse {
  common.Status status = 1;
  uint32 source_id = 2;
  uint32 table_id = 3;
  uint64 version = 4;
}

message DropMaterializedSourceRequest {
  uint32 source_id = 1;
  uint32 table_id = 2;
}

message DropMaterializedSourceResponse {
  common.Status status = 1;
  uint64 version = 2;
}

// Used by risectl (and in the future, dashboard)
message RisectlListStateTablesRequest {}

// Used by risectl (and in the future, dashboard)
message RisectlListStateTablesResponse {
  repeated catalog.Table tables = 1;
}

message CreateIndexRequest {
  catalog.Index index = 1;
  catalog.Table index_table = 2;
  stream_plan.StreamFragmentGraph fragment_graph = 3;
}

message CreateIndexResponse {
  common.Status status = 1;
  uint32 index_id = 2;
  uint64 version = 4;
}

message DropIndexRequest {
  uint32 index_id = 1;
}

message DropIndexResponse {
  common.Status status = 1;
  uint64 version = 2;
}

service DdlService {
  rpc CreateDatabase(CreateDatabaseRequest) returns (CreateDatabaseResponse);
  rpc DropDatabase(DropDatabaseRequest) returns (DropDatabaseResponse);
  rpc CreateSchema(CreateSchemaRequest) returns (CreateSchemaResponse);
  rpc DropSchema(DropSchemaRequest) returns (DropSchemaResponse);
  rpc CreateSource(CreateSourceRequest) returns (CreateSourceResponse);
  rpc DropSource(DropSourceRequest) returns (DropSourceResponse);
  rpc CreateSink(CreateSinkRequest) returns (CreateSinkResponse);
  rpc DropSink(DropSinkRequest) returns (DropSinkResponse);
  rpc CreateMaterializedView(CreateMaterializedViewRequest) returns (CreateMaterializedViewResponse);
  rpc DropMaterializedView(DropMaterializedViewRequest) returns (DropMaterializedViewResponse);
  rpc CreateMaterializedSource(CreateMaterializedSourceRequest) returns (CreateMaterializedSourceResponse);
  rpc DropMaterializedSource(DropMaterializedSourceRequest) returns (DropMaterializedSourceResponse);
  rpc RisectlListStateTables(RisectlListStateTablesRequest) returns (RisectlListStateTablesResponse);
  rpc CreateIndex(CreateIndexRequest) returns (CreateIndexResponse);
  rpc DropIndex(DropIndexRequest) returns (DropIndexResponse);
}
