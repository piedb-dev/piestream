# This file is automatically generated. See `src/frontend/test_runner/README.md` for more information.
- sql: |
    create table t1 (v1 int, v2 int);
    with cte as (select v1, v2 from t1) select v1 from cte;
  logical_plan: |
    LogicalProject { exprs: [$0] }
      LogicalProject { exprs: [$1, $2] }
        LogicalScan { table: t1, columns: [_row_id, v1, v2] }
  stream_plan: |
    StreamMaterialize { columns: [v1, _row_id(hidden)], pk_columns: [_row_id] }
      StreamTableScan { table: t1, columns: [v1, _row_id], pk_indices: [1] }
- sql: |
    create table t1 (v1 int, v2 int);
    create table t2 (v3 int, v4 int);
    with cte as (select v1 from t1) select * from t2 inner join cte on t2.v3 = cte.v1;
  logical_plan: |
    LogicalProject { exprs: [$1, $2, $3] }
      LogicalJoin { type: Inner, on: ($1 = $3), output_indices: all }
        LogicalScan { table: t2, columns: [_row_id, v3, v4] }
        LogicalProject { exprs: [$1] }
          LogicalScan { table: t1, columns: [_row_id, v1, v2] }
  stream_plan: |
    StreamMaterialize { columns: [v3, v4, v1, _row_id(hidden), _row_id#1(hidden)], pk_columns: [_row_id, _row_id#1] }
      StreamExchange { dist: HashShard([3, 4]) }
        StreamHashJoin { type: Inner, predicate: $0 = $3, output_indices: [0, 1, 3, 2, 4] }
          StreamExchange { dist: HashShard([0]) }
            StreamTableScan { table: t2, columns: [v3, v4, _row_id], pk_indices: [2] }
          StreamExchange { dist: HashShard([0]) }
            StreamTableScan { table: t1, columns: [v1, _row_id], pk_indices: [1] }
- sql: |
    create table t1 (v1 int, v2 int);
    create table t2 (v3 int, v4 int);
    with cte as (select v1, v2 from t1), cte2 as (select v1 from cte) select * from cte2;
  logical_plan: |
    LogicalProject { exprs: [$0] }
      LogicalProject { exprs: [$0] }
        LogicalProject { exprs: [$1, $2] }
          LogicalScan { table: t1, columns: [_row_id, v1, v2] }
  stream_plan: |
    StreamMaterialize { columns: [v1, _row_id(hidden)], pk_columns: [_row_id] }
      StreamTableScan { table: t1, columns: [v1, _row_id], pk_indices: [1] }
