
[tasks.update-planner-test]
description = "Update planner test data"
private = true
script = '''
#!/bin/bash
set -e
cargo run --bin planner-test-apply
'''

[tasks.apply-planner-test]
description = "Generate planner test data"
dependencies = [
  "update-planner-test"
]
script = '''
#!/bin/bash
set -e
cd src/frontend/planner_test/tests/testdata/

for f in *.apply.yaml
do
  diff "$f" "$(basename "$f" .apply.yaml).yaml" || true
done

echo "If you want to apply the planner test data, run: $(tput setaf 2)./risedev do-apply-planner-test$(tput sgr 0)"
'''
category = "RiseDev - Test"

[tasks.do-apply-planner-test]
description = "Apply planner test data"
dependencies = [
  "update-planner-test"
]
script = '''
#!/bin/bash
set -e
cd src/frontend/planner_test/tests/testdata/

for f in *.apply.yaml
do
  SOURCE="$(basename $f .apply.yaml).yaml"
  if [ -f "$SOURCE" ]; then
    cat <<EOF > temp.apply.yaml
# This file is automatically generated. See \`src/frontend/planner_test/README.md\` for more information.
EOF
    cat "$f" >> temp.apply.yaml
    mv temp.apply.yaml "$SOURCE"
  fi
done

rm *.apply.yaml

echo "$(tput setaf 2)Diff applied!$(tput sgr 0)"
'''
category = "RiseDev - Test"

[tasks.run-planner-test]
description = "Run planner test"
category = "RiseDev - Test"
dependencies = ["warn-on-missing-tools"]
script = '''
#!/bin/bash
set -e

cargo nextest run -p piestream_planner_test --retries 0 "$@"
'''
