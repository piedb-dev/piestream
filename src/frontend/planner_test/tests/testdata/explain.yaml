# This file is automatically generated. See `src/frontend/planner_test/README.md` for more information.
- sql: explain (distsql, trace, verbose) select 1;
  explain_output: |
    Begin:

    LogicalProject { exprs: [1:Int32] }
    └─LogicalValues { rows: [[]], schema: Schema { fields: [] } }

    Predicate Push Down:

    LogicalProject { exprs: [1:Int32] }
    └─LogicalValues { rows: [[]], schema: Schema { fields: [] } }

    Predicate Push Down:

    LogicalProject { exprs: [1:Int32] }
    └─LogicalValues { rows: [[]], schema: Schema { fields: [] } }

    Prune Columns:

    LogicalProject { exprs: [1:Int32] }
    └─LogicalValues { rows: [[]], schema: Schema { fields: [] } }

    Predicate Push Down:

    LogicalProject { exprs: [1:Int32] }
    └─LogicalValues { rows: [[]], schema: Schema { fields: [] } }

    To Batch Physical Plan:

    BatchProject { exprs: [1:Int32] }
    └─BatchValues { rows: [[]] }

    To Batch Local Plan:

    BatchProject { exprs: [1:Int32] }
    └─BatchValues { rows: [[]] }

    {
      "root_stage_id": 0,
      "stages": {
        "0": {
          "root": {
            "plan_node_id": 22,
            "plan_node_type": "BatchProject",
            "schema": [
              {
                "dataType": {
                  "typeName": "INT32",
                  "isNullable": true
                },
                "name": "1:Int32"
              }
            ],
            "children": [
              {
                "plan_node_id": 20,
                "plan_node_type": "BatchValues",
                "schema": [],
                "children": [],
                "source_stage_id": null
              }
            ],
            "source_stage_id": null
          },
          "parallelism": 1,
          "exchange_info": {
            "mode": "SINGLE"
          }
        }
      },
      "child_edges": {
        "0": []
      },
      "parent_edges": {
        "0": []
      }
    }
