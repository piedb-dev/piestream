# This file is automatically generated. See `src/frontend/planner_test/README.md` for more information.
- sql: |
    create table t1 (v1 int, v2 float);
    create table t2 (v3 int, v4 numeric, v5 bigint);
    create index t1_v1 on t1(v1) include(v2);
    create index t2_v3 on t2(v3) include(v4, v5);
    /* should generate delta join plan, and stream index scan */
    select * from t1, t2 where t1.v1 = t2.v3;
  stream_plan: |
    StreamMaterialize { columns: [v1, v2, v3, v4, v5, t1_v1.t1._row_id(hidden), t2_v3.t2._row_id(hidden)], pk_columns: [t1_v1.t1._row_id, t2_v3.t2._row_id, v1, v3] }
    └─StreamDeltaJoin { type: Inner, predicate: t1_v1.v1 = t2_v3.v3, output: [t1_v1.v1, t1_v1.v2, t2_v3.v3, t2_v3.v4, t2_v3.v5, t1_v1.t1._row_id, t2_v3.t2._row_id] }
      ├─StreamIndexScan { index: t1_v1, columns: [t1_v1.v1, t1_v1.v2, t1_v1.t1._row_id], pk: [t1_v1.t1._row_id], dist: HashShard(t1_v1.v1) }
      └─StreamIndexScan { index: t2_v3, columns: [t2_v3.v3, t2_v3.v4, t2_v3.v5, t2_v3.t2._row_id], pk: [t2_v3.t2._row_id], dist: HashShard(t2_v3.v3) }
- id: index_slt
  sql: |
    create table iii_t1 (v1 int, v2 int);
    create table iii_t2 (v3 int, v4 int);
    create table iii_t3 (v5 int, v6 int);
    create materialized view iii_mv1 as select * from iii_t1, iii_t2, iii_t3 where iii_t1.v1 = iii_t2.v3 and iii_t1.v1 = iii_t3.v5;
    create index iii_index_1 on iii_t1(v1) include(v2);
    create index iii_index_2 on iii_t2(v3) include(v4);
- before:
  - index_slt
  sql: |
    select * from iii_t1, iii_t2 where iii_t1.v1 = iii_t2.v3;
  stream_plan: |
    StreamMaterialize { columns: [v1, v2, v3, v4, iii_index_1.iii_t1._row_id(hidden), iii_index_2.iii_t2._row_id(hidden)], pk_columns: [iii_index_1.iii_t1._row_id, iii_index_2.iii_t2._row_id, v1, v3] }
    └─StreamDeltaJoin { type: Inner, predicate: iii_index_1.v1 = iii_index_2.v3, output: [iii_index_1.v1, iii_index_1.v2, iii_index_2.v3, iii_index_2.v4, iii_index_1.iii_t1._row_id, iii_index_2.iii_t2._row_id] }
      ├─StreamIndexScan { index: iii_index_1, columns: [iii_index_1.v1, iii_index_1.v2, iii_index_1.iii_t1._row_id], pk: [iii_index_1.iii_t1._row_id], dist: HashShard(iii_index_1.v1) }
      └─StreamIndexScan { index: iii_index_2, columns: [iii_index_2.v3, iii_index_2.v4, iii_index_2.iii_t2._row_id], pk: [iii_index_2.iii_t2._row_id], dist: HashShard(iii_index_2.v3) }
- before:
  - index_slt
  sql: |
    select v4 from iii_t1, iii_t2 where iii_t1.v1 = iii_t2.v3;
  stream_plan: |
    StreamMaterialize { columns: [v4, iii_index_1.iii_t1._row_id(hidden), iii_index_1.v1(hidden), iii_index_2.iii_t2._row_id(hidden), iii_index_2.v3(hidden)], pk_columns: [iii_index_1.iii_t1._row_id, iii_index_2.iii_t2._row_id, iii_index_1.v1, iii_index_2.v3] }
    └─StreamDeltaJoin { type: Inner, predicate: iii_index_1.v1 = iii_index_2.v3, output: [iii_index_2.v4, iii_index_1.iii_t1._row_id, iii_index_1.v1, iii_index_2.iii_t2._row_id, iii_index_2.v3] }
      ├─StreamIndexScan { index: iii_index_1, columns: [iii_index_1.v1, iii_index_1.iii_t1._row_id], pk: [iii_index_1.iii_t1._row_id], dist: HashShard(iii_index_1.v1) }
      └─StreamIndexScan { index: iii_index_2, columns: [iii_index_2.v3, iii_index_2.v4, iii_index_2.iii_t2._row_id], pk: [iii_index_2.iii_t2._row_id], dist: HashShard(iii_index_2.v3) }
