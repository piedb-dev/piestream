// Copyright 2022 Singularity Data
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

use itertools::Itertools;

use crate::FrontendConfig;

pub struct FrontendGen;

impl FrontendGen {
    pub fn gen_server_properties(&self, config: &FrontendConfig) -> String {
        let frontend_host = &config.listen_address;
        let frontend_port = &config.port;
        let meta_node_hosts = config
            .provide_meta_node
            .as_ref()
            .unwrap()
            .iter()
            .map(|node| format!("{}:{}", node.address, node.port))
            .join(",");

        format!(
            r#"# --- THIS FILE IS AUTO GENERATED BY RISEDEV ---
risingwave.pgserver.ip={frontend_host}
risingwave.pgserver.port={frontend_port}
risingwave.leader.clustermode=Distributed

risingwave.catalog.mode=Remote
risingwave.meta.node={meta_node_hosts}
"#
        )
    }
}
